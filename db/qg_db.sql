-- MySQL Script generated by MySQL Workbench
-- 05/08/17 00:28:45
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema qg_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema qg_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `qg_db` DEFAULT CHARACTER SET utf8 ;
USE `qg_db` ;

-- -----------------------------------------------------
-- Table `qg_db`.`qg_user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `qg_db`.`qg_user` ;

CREATE TABLE IF NOT EXISTS `qg_db`.`qg_user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nickname` VARCHAR(10) NOT NULL,
  `real_name` VARCHAR(20) NOT NULL,
  `email` VARCHAR(320) NULL,
  `phone_number` VARCHAR(11) NULL,
  `id_card_no` VARCHAR(18) NULL,
  `register_time` VARCHAR(20) NOT NULL,
  `register_order` INT NOT NULL,
  `meaning_of_trip` VARCHAR(40) NULL,
  `head_icon` VARCHAR(45) NULL DEFAULT 0,
  `password` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `phone_number_UNIQUE` (`phone_number` ASC),
  UNIQUE INDEX `id_card_no_UNIQUE` (`id_card_no` ASC),
  UNIQUE INDEX `nickname_UNIQUE` (`nickname` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `qg_db`.`qg_scenic_spots`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `qg_db`.`qg_scenic_spots` ;

CREATE TABLE IF NOT EXISTS `qg_db`.`qg_scenic_spots` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NOT NULL,
  `country` VARCHAR(50) NOT NULL,
  `province` VARCHAR(30) NOT NULL,
  `brief_introduction` TEXT NOT NULL,
  `folk_culture` TEXT NOT NULL,
  `feature` TEXT NOT NULL,
  `official_comments` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY(`name`, `country`, `province`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `qg_db`.`qg_invite_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `qg_db`.`qg_invite_code` ;

CREATE TABLE IF NOT EXISTS `qg_db`.`qg_invite_code` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `invite_code` VARCHAR(16) NOT NULL,
  `remaining_times` INT NOT NULL DEFAULT 8,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `qg_db`.`qg_footprint`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `qg_db`.`qg_footprint` ;

CREATE TABLE IF NOT EXISTS `qg_db`.`qg_footprint` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `affiliation_user` INT NOT NULL,
  `like_amount` INT NULL DEFAULT 0,
  `comments_amount` INT NULL DEFAULT 0,
  `read_amount` INT NULL DEFAULT 0,
  `name` VARCHAR(30) NOT NULL,
  `country` VARCHAR(50) NOT NULL,
  `province` VARCHAR(30) NOT NULL,
  `state` INT NULL DEFAULT 1,
  `describe1` TEXT NOT NULL,
  `describe2` TEXT NOT NULL,
  `describe3` TEXT NOT NULL,
  `describe4` TEXT NOT NULL,
  `describe5` TEXT NOT NULL,
  `describe6` TEXT NOT NULL,
  `image1` TEXT NULL,
  `image2` TEXT NULL,
  `image3` TEXT NULL,
  `image4` TEXT NULL,
  `image5` TEXT NULL,
  `image6` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `affiliation_user_idx` (`affiliation_user` ASC),
  CONSTRAINT `affiliation_user1`
    FOREIGN KEY (`affiliation_user`)
    REFERENCES `qg_db`.`qg_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `qg_db`.`qg_label`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `qg_db`.`qg_label` ;

CREATE TABLE IF NOT EXISTS `qg_db`.`qg_label` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `content` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `content_UNIQUE` (`content` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `qg_db`.`qg_user2label_mapping`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `qg_db`.`qg_user2label_mapping` ;

CREATE TABLE IF NOT EXISTS `qg_db`.`qg_user2label_mapping` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `affiliation_user` INT NOT NULL,
  `affiliation_label` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY (`affiliation_user`, `affiliation_label`),
  CONSTRAINT `affiliation_user2`
    FOREIGN KEY (`affiliation_user`)
    REFERENCES `qg_db`.`qg_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `affiliation_label3`
    FOREIGN KEY (`affiliation_label`)
    REFERENCES `qg_db`.`qg_label` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `qg_db`.`qg_user_relationship`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `qg_db`.`qg_user_relationship` ;

CREATE TABLE IF NOT EXISTS `qg_db`.`qg_user_relationship` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_follow` INT NOT NULL,
  `user_be_followed` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY (`user_be_followed`, `user_follow`),
  CONSTRAINT `user_follow4`
    FOREIGN KEY (`user_follow`)
    REFERENCES `qg_db`.`qg_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_be_followed5`
    FOREIGN KEY (`user_be_followed`)
    REFERENCES `qg_db`.`qg_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `qg_db`.`qg_comments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `qg_db`.`qg_comments` ;

CREATE TABLE IF NOT EXISTS `qg_db`.`qg_comments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `affiliation_footprint` INT NULL,
  `affiliation_user` INT NULL,
  `time` VARCHAR(20) NULL,
  `content` VARCHAR(45) NULL,
  `like` INT NULL,
  `unlike` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `affiliation_footprint_idx` (`affiliation_footprint` ASC),
  INDEX `affiliation_user_idx` (`affiliation_user` ASC),
  CONSTRAINT `affiliation_footprint6`
    FOREIGN KEY (`affiliation_footprint`)
    REFERENCES `qg_db`.`qg_footprint` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `affiliation_user7`
    FOREIGN KEY (`affiliation_user`)
    REFERENCES `qg_db`.`qg_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `qg_db`.`qg_notifications`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `qg_db`.`qg_notifications` ;

CREATE TABLE IF NOT EXISTS `qg_db`.`qg_notifications` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `affiliation_user` INT NOT NULL,
  `time` VARCHAR(20) NOT NULL,
  `state` INT NULL DEFAULT '1',
  `content` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `affiliation_user_idx` (`affiliation_user` ASC),
  CONSTRAINT `affiliation_user8`
    FOREIGN KEY (`affiliation_user`)
    REFERENCES `qg_db`.`qg_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `qg_db`.`qg_scenic_spots2label_mapping`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `qg_db`.`qg_scenic_spots2label_mapping` ;

CREATE TABLE IF NOT EXISTS `qg_db`.`qg_scenic_spots2label_mapping` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `affiliation_scenic_spots` INT NOT NULL,
  `affiliation_label` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY (`affiliation_scenic_spots`, `affiliation_label`),
  CONSTRAINT `affiliation_scenic_spots9`
    FOREIGN KEY (`affiliation_scenic_spots`)
    REFERENCES `qg_db`.`qg_scenic_spots` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `affiliation_label99`
    FOREIGN KEY (`affiliation_label`)
    REFERENCES `qg_db`.`qg_label` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
